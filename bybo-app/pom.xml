<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>br.com.phkaiser.bybo</groupId>
		<artifactId>bybo-parent</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>bybo-app</artifactId>
	<packaging>jar</packaging>

	<name>ByBo</name>
	<description>Módulo da aplicação gráfica (GUI) com JavaFX.</description>

	<properties>
		<javafx.version>17.0.10</javafx.version>
		<javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
		<junit.version>5.10.2</junit.version>
		<testfx.version>4.0.16-alpha</testfx.version>
		<jpackage.app-version>${project.version}</jpackage.app-version>
		<jpackage.skip>false</jpackage.skip>
	</properties>

	<dependencies>
		<dependency>
			<groupId>br.com.phkaiser.bybo</groupId>
			<artifactId>bybo-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>br.com.phkaiser.bybo</groupId>
			<artifactId>bybo-persistence</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-javafx</artifactId>
			<version>12.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-fontawesome5-pack</artifactId>
			<version>12.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.fusesource.jansi</groupId>
			<artifactId>jansi</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.3</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>${testfx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>${testfx.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Plugin do JavaFX para facilitar a execução via Maven (mvn javafx:run) -->
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>${javafx.maven.plugin.version}</version>
				<configuration>
					<!-- O Launcher é necessário para contornar problemas de classpath com JavaFX em JARs não modulares -->
					<mainClass>br.com.phkaiser.bybo.app.Launcher</mainClass>
				</configuration>
			</plugin>

			<!-- Copia todas as dependências de runtime para a pasta 'target/dependencies' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Configura o MANIFEST.MF para que o JAR seja executável com 'java -jar' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependencies/</classpathPrefix>
							<mainClass>br.com.phkaiser.bybo.app.Launcher</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Cria instaladores nativos (.msi, .dmg, .deb) -->
			<plugin>
				<groupId>org.panteleyev</groupId>
				<artifactId>jpackage-maven-plugin</artifactId>
				<version>1.7.1</version>
				<executions>
					<execution>
						<id>jpackage</id>
						<phase>package</phase>
						<goals>
							<goal>jpackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${jpackage.skip}</skip>
					<name>ByBo</name>
					<appVersion>${jpackage.app-version}</appVersion>
					<vendor>phkaiser</vendor>
					<destination>target/dist</destination>
					<input>${project.build.directory}</input>
					<mainJar>${project.build.finalName}.jar</mainJar>
					<!-- jpackage precisa da classe real do Application, não do launcher -->
					<mainClass>br.com.phkaiser.bybo.app.ByBoGraphicalApp</mainClass>
					<modulePaths>
						<path>${project.build.directory}/dependencies</path>
					</modulePaths>
					<!-- Inclui os módulos JavaFX no runtime image -->
					<addModules>
						<addModule>javafx.controls</addModule>
						<addModule>javafx.fxml</addModule>
					</addModules>
					<type>${installerType}</type>
					<javaOptions>
						<javaOption>-Dfile.encoding=UTF-8</javaOption>
					</javaOptions>
					<icon>src/main/resources/br/com/phkaiser/bybo/app/ui/appicons/ByBo.png</icon>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
